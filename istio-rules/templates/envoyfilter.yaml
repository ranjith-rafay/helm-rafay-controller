---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: ingressgateway-gzip
  namespace: istio-system
spec:
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: GATEWAY
      listener:
        filterChain:
          filter:
            name: envoy.filters.network.http_connection_manager
            subFilter:
              name: envoy.filters.http.router
    patch:
      operation: INSERT_FIRST
      value:
        name: envoy.filters.http.compressor
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.http.compressor.v3.Compressor
          compressor_library:
            name: text_optimized
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.compression.gzip.compressor.v3.Gzip
          remove_accept_encoding_header: true
  workloadSelector:
    labels:
      istio: ingressgateway
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: infra-salt-router
  namespace: istio-system
spec:
  workloadSelector:
    labels:
      istio: ingressgateway
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: GATEWAY
        listener:
          #portNumber: 443
          filterChain:
            sni: salt.core.{{.Values.global.default_partner_console_domain}}
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: envoy.filters.http.router     
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.lua
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
            inlineCode: |
              function envoy_on_request(request_handle)
                local body = '{"edgeId": "' .. request_handle:headers():get("edgeID") .. '"}'
                request_handle:logDebug("Salt request body:" .. body)
                local response_headers, response_body = request_handle:httpCall(
                  "outbound|4700||infra-salt-router.rafay-core.svc.cluster.local",
                  {
                    [":method"] = "POST",
                    [":path"] = "/v1/infraSaltRouter/server",
                    [":authority"] = "infra-salt-router.rafay-core.svc.cluster.local"
                  },
                  body,
                  5000
                )       
                if response_headers and response_headers[":status"] == "200" then
                    if response_body then
                        request_handle:logDebug("Salt response body:" .. response_body)
                        -- Define the pattern to match the value associated with the "server" key
                        local pattern = '"server":"([^"]+)"'
                        -- Use string.match to extract the value
                        local server = response_body:match(pattern)
                        request_handle:headers():add("target-host", server)
                    else
                        request_handle:logWarn("Salt response body is nil")
                    end
                else
                    request_handle:logWarn("Salt router call failed")
                end
              end
              function envoy_on_response(response_handle)
                response_handle:logDebug("Bye Bye.")
              end