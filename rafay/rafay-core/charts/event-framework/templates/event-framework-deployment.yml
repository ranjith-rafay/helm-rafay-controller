apiVersion: v1
kind: ServiceAccount
metadata:
  name: event-framework-sa
  namespace: rafay-core
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: rafay-core
  name: event-framework-role
rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    verbs:
    - '*'
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: event-framework-rb
  namespace: rafay-core
subjects:
- kind: ServiceAccount
  name: event-framework-sa
  namespace: rafay-core
roleRef:
  kind: Role 
  name: event-framework-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: event-framework
  name: event-framework
spec:
{{- if eq .Values.global.ha_enabled true }}
  replicas: {{ default "3" .Values.global.minReplicaCount }}
{{- else }}
  replicas: {{ default "1" .Values.global.minReplicaCount }}
{{- end }}
  selector:
    matchLabels:
      app: event-framework
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: event-framework
    spec:
      serviceAccount: event-framework-sa
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - event-framework
              topologyKey: kubernetes.io/hostname    
      containers:
      - name: es-template-init
        env:
        - name: OPENSEARCH_ENABLED
          value: "{{.Values.opensearch_enabled }}"
        {{- if .Values.opensearch_enabled }}
        - name: ELASTICSEARCH1_URL
          value: https://{{ .Values.global.opensearch.endpoint }}
        - name: KENISIS_ENABLED
          value: "false"
        - name: ELASTICSEARCH1_USERNAME
          value: {{.Values.global.opensearch.user_name}}
        - name: ELASTICSEARCH1_PASSWORD
          value: {{.Values.global.opensearch.user_password | quote }}
        {{- else if .Values.external_elasticsearch_enabled }} 
        - name: ELASTICSEARCH1_URL
          value: "https://{{ .Values.global.external_elasticsearch.endpoint }}:{{ .Values.global.external_elasticsearch.port }}"
        - name: ELASTICSEARCH1_USERNAME
          value: {{ .Values.global.external_elasticsearch.user_name }}
        - name: ELASTICSEARCH1_PASSWORD
          value: {{ .Values.global.external_elasticsearch.user_password | b64dec | quote }}  
        {{- else }}
        - name: ELASTICSEARCH1_URL
          value: https://{{ .Values.global.elasticsearch_core_01_endpoint }}
        - name: ELASTICSEARCH1_USERNAME
          value: elastic
        - name: ELASTICSEARCH1_PASSWORD
          valueFrom:
            secretKeyRef:
              key: elastic
              name: rafay-es-es-elastic-user
        {{- end }}
        image: {{ .Values.es_init_image }}
        imagePullPolicy: IfNotPresent 
        {{- if or (eq .Values.global.ha_enabled true) (eq .Values.global.size "S") (eq .Values.global.size "M") (eq .Values.global.size "L") }}
        resources:
          limits:
            cpu: "{{ .Values.cpu_limits }}"
            memory: "{{ .Values.memory_limits }}"
          requests:
            cpu: "{{ .Values.cpu_requests }}"
            memory: "{{ .Values.memory_requests }}"
        {{- end }}
      - env:
        - name: FW_EVENT_TOPIC_NAME
          value: {{ .Values.events_es_kafka_topic }}
        - name: FW_EVENT_KAFKA_BROKERS
          value: kafka-core:9092
        - name: OPENSEARCH_ENABLED
          value: "{{.Values.opensearch_enabled }}"
        {{- if .Values.opensearch_enabled }}
        - name: FW_EVENT_ES_END_POINT
          value: "{{.Values.global.opensearch.endpoint}}/"
        - name: FW_EVENT_ES_USER_NAME
          value: {{.Values.global.opensearch.user_name}}
        - name: FW_EVENT_ES_PASSWORD
          value: {{ .Values.global.opensearch.user_password | quote }}
        {{- else if .Values.external_elasticsearch_enabled }}
        - name: FW_EVENT_ES_END_POINT
          value: "{{ .Values.global.external_elasticsearch.endpoint }}:{{ .Values.global.external_elasticsearch.port }}"
        - name: FW_EVENT_ES_USER_NAME
          value: {{ .Values.global.external_elasticsearch.user_name }}
        - name: FW_EVENT_ES_PASSWORD
          value: {{ .Values.global.external_elasticsearch.user_password | b64dec | quote }}    
        {{- else }}
        - name: FW_EVENT_ES_END_POINT
          value: {{ .Values.global.elasticsearch_core_01_endpoint }}
        - name: FW_EVENT_ES_USER_NAME
          value: elastic
        - name: FW_EVENT_ES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: elastic
              name: rafay-es-es-elastic-user
        {{- end }}
        - name: FW_EVENT_ENV
          value: {{ .Values.global.deployment_env }}
        - name: FW_EVENT_DEFAULT_ALERT_EMAIL
          value: {{ .Values.event_fw_default_alert_alias }}
        - name: FW_EVENT_ES_PROTOCOL
          value: HTTPS
        - name: FW_EVENT_RELAY_COMMANDS_ES_INDEX_PREFIX
          value: relay-commands
        - name: FW_EVENT_IS_SELF_HOSTED
          value: "true"
        - name: IS_SELF_HOSTED	
          value: "true"          
        - name: FW_EVENT_AUTH_ADDR
          value: "authsrv:50011"
        - name: FW_EVENT_RPC_PORT
          value: "7000"
        - name: FW_EVENT_API_PORT
          value: "8000"
        - name: FW_EVENT_MTLS_API_PORT
          value: "7001"
        - name: FW_EVENT_SUPPRESS_ALERTS
          value: "false"
        - name: FW_EVENT_ENABLE_PPROF
          value: "true"
        - name: FW_EVENT_EDGE_ADDR
          value: "edgesrv:50701"
        - name: FW_EVENT_PG_ADDR
          value: postgres-admin:5432
        - name: FW_EVENT_PG_DATABASE
          value: eventsdb
        - name: FW_EVENT_PG_USERNAME
          value: {{ .Values.global.dbusers.event_db_user | quote }}
        {{- if .Values.global.is_external_database }}
        - name: FW_EVENT_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: eventsdb-db-secret
        {{- else }}
        - name: FW_EVENT_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: eventsdbuser.postgres-admin.credentials.postgresql.acid.zalan.do
        {{- end }}
        - name: FW_EVENT_ES_INDEX_PREFIX
          value: {{ .Values.events_es_index_prefix }}-core
        - name: FW_EVENT_ALERT_ES_INDEX_PREFIX
          value: alerts
        - name: FW_EVENT_RELAY_AUDITS_ES_INDEX_PREFIX
          value: relay-audits
        - name: FW_EVENT_OPA_AUDITS_ES_INDEX_PREFIX
          value: opa-logs
        - name: FW_EVENT_REDIS_ADDR
          value: "{{ .Values.global.redis_endpoint  }}.rafay-core.svc.cluster.local:6379"
       {{- if .Values.global.ssl_mode }}
        - name: PGSSLMODE
          value: {{ default "" .Values.global.ssl_mode }}
       {{- end }}
        image: {{ .Values.event_framework_image }}
        imagePullPolicy: IfNotPresent
        name: event-framework
        {{- if or (eq .Values.global.ha_enabled true) (eq .Values.global.size "S") (eq .Values.global.size "M") (eq .Values.global.size "L") }}
        resources:
          limits:
            cpu: "{{ .Values.cpu_limits }}"
            memory: "{{ .Values.memory_limits }}"
          requests:
            cpu: "{{ .Values.cpu_requests }}"
            memory: "{{ .Values.memory_requests }}"
        {{- end }}
        ports:
        - containerPort: 60666
          protocol: TCP
        - containerPort: 8000
          protocol: TCP
        - containerPort: 7001
          protocol: TCP
        volumeMounts:
          - mountPath: /etc/rcloud/certs
            name: certs
      dnsPolicy: ClusterFirstWithHostNet
      hostname: event-framework
      imagePullSecrets:
      - name: rafay-edge-registry-creds
      restartPolicy: Always
      volumes:
        - name: certs
          secret:
            items:
            - key: tls.crt
              path: server.crt
            - key: tls.key
              path: server.key
            - key: ca.crt
              path: ca.crt
            secretName: selfsigned-cert-tls-event
---
{{- if .Values.global.ha_enabled }}
{{- if ne .Values.global.size "S" }}
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: event-framework
  name: event-framework
spec:
  maxReplicas: {{ default "10" .Values.maxReplicas }}
{{- if eq .Values.global.ha_enabled true }}
  minReplicas: {{ default "3" .Values.global.minReplicaCount }}
{{- else }}
  minReplicas: {{ default "1" .Values.global.minReplicaCount }}
{{- end }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: event-framework
  targetCPUUtilizationPercentage: 80
{{- end }}
{{- end }}
