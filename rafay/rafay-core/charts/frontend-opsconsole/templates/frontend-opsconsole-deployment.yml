apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend-opsconsole
  name: frontend-opsconsole
spec:
{{- if eq .Values.global.ha_enabled true }}
  replicas: {{ default "3" .Values.global.minReplicaCount }}
{{- else }}
  replicas: {{ default "1" .Values.global.minReplicaCount }}
{{- end }}
  selector:
    matchLabels:
      app: frontend-opsconsole
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: frontend-opsconsole
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - frontend-opsconsole
              topologyKey: kubernetes.io/hostname
      containers:
      - image: {{ .Values.frontend_opsconsole_image }}        
        imagePullPolicy: IfNotPresent
        name: frontend-opsconsole
        env:
        - name: PROMETHEUS_URL_COSTMGMT
          value: http://prometheus-k8s-cost-metrics.rafay-core:9090  
        - name: ENV
          value: production            
        - name: IS_SELF_HOSTED
          value: "true"
        - name: CONTROLLER_VER
          value: "2.5-03"
        - name: ELASTIC_SEARCH_FQDN
          value: elasticsearch
        - name: RAFAY_CONJURER_URL
          value: https://console.{{.Values.global.default_partner_console_domain}}/{{ .Values.global.rafay_conjurer_url }}
        - name: AUTH_SVC_HOST
          value: authsrv
        - name: AUTH_SVC_PORT
          value: "50011"
        - name: PROMETHEUS_NAMESPACE
          value: rafay-core
        - name: PROMETHEUS_FQDN
          value: prometheus-k8s:9090
        {{- if or (eq .Values.global.ha_enabled true) (eq .Values.global.size "S") (eq .Values.global.size "M") (eq .Values.global.size "L") }}
        resources:
          limits:
            cpu: "{{ .Values.cpu_limits }}"
            memory: "{{ .Values.memory_limits }}"
          requests:
            cpu: "{{ .Values.cpu_requests }}"
            memory: "{{ .Values.memory_requests }}"
        {{- end }}
        ports:
        - containerPort: 8081
          name: http
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /live
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 15
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: rafay-edge-registry-creds
      restartPolicy: Always
---
{{- if .Values.global.ha_enabled }}
{{- if ne .Values.global.size "S" }}
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: frontend-opsconsole
  name: frontend-opsconsole
spec:
  maxReplicas: {{ default "10" .Values.maxReplicas }}
{{- if eq .Values.global.ha_enabled true }}
  minReplicas: {{ default "3" .Values.global.minReplicaCount }}
{{- else }}
  minReplicas: {{ default "1" .Values.global.minReplicaCount }}
{{- end }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend-opsconsole
  targetCPUUtilizationPercentage: 80
{{- end }}
{{- end }}