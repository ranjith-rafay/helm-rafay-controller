apiVersion: v1
kind: ServiceAccount
metadata:
  name: capi-controller-vsphere-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: capi-controller-vsphere-role
rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    verbs:
    - '*'
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: capi-controller-vsphere-rb
subjects:
  - kind: ServiceAccount
    name: capi-controller-vsphere-sa
    namespace: rafay-system
roleRef:
  kind: Role
  name: capi-controller-vsphere-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: capi-controller-vsphere
  name: capi-controller-vsphere
spec:
  progressDeadlineSeconds: 600
  {{- if eq .Values.global.ha_enabled true }}
  replicas: {{ default "3" .Values.global.minReplicaCount }}
  {{- else }}
  replicas: {{ default "1" .Values.global.minReplicaCount }}
  {{- end }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: capi-controller-vsphere
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: capi-controller-vsphere
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - capi-controller-vsphere
              topologyKey: kubernetes.io/hostname
      serviceAccount: "capi-controller-vsphere-sa"
      containers:
      - env:
        - name: IS_SELF_HOSTED
          value: "True" 
        - name: IS_SELF_SIGNED
          value: "True"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INFRA_RELAY_USER_HOST
          valueFrom:
            configMapKeyRef:
              key: infrarelay.user.host
              name: capi-controller-vsphere-configmap
        - name: SENTRY_ADDR
          valueFrom:
            configMapKeyRef:
              key: sentry.addr
              name: capi-controller-vsphere-configmap
        - name: OVA_TEMPLATE_S3_URL
          valueFrom:
            configMapKeyRef:
              key: ova.template.s3.url
              name: capi-controller-vsphere-configmap
        - name: NEXUS_URL
          valueFrom:
            configMapKeyRef:
              key: nexus.url
              name: capi-controller-vsphere-configmap     
        - name: GITHUB_TOKEN
          valueFrom:
            configMapKeyRef:
              key: github.token
              name: capi-controller-vsphere-configmap
        - name: CAPI_VERSION
          valueFrom:
            configMapKeyRef:
              key: capi.version
              name: capi-controller-vsphere-configmap 
        - name: CAPV_VERSION
          valueFrom:
            configMapKeyRef:
              key: capv.version
              name: capi-controller-vsphere-configmap 
        - name: CERT_MANAGER_VERSION
          valueFrom:
            configMapKeyRef:
              key: cert.manager.version
              name: capi-controller-vsphere-configmap  
        - name: CAPI_IMAGE_REPOSITORY
          valueFrom:
            configMapKeyRef:
              key: capi.image.repository
              name: capi-controller-vsphere-configmap
        - name: REDIS_ADDR
          valueFrom:
            configMapKeyRef:
              key: redisAddr
              name: capi-controller-gke-configmap      
        image: {{.Values.capi_controller_vsphere_image }}
        imagePullPolicy: IfNotPresent
        name: capi-controller-vsphere
        {{- if or (eq .Values.global.ha_enabled true) (eq .Values.global.size "S") (eq .Values.global.size "M") (eq .Values.global.size "L") }}
        resources:
          limits:
            cpu: "{{ .Values.cpu_limits }}"
            memory: "{{ .Values.memory_limits }}"
          requests:
            cpu: "{{ .Values.cpu_requests }}"
            memory: "{{ .Values.memory_requests }}"
        {{- end }}
---
{{- if .Values.global.ha_enabled }}
{{- if ne .Values.global.size "S" }}
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: capi-controller-vsphere
  name: capi-controller-vsphere
spec:
  maxReplicas: {{ default "10" .Values.maxReplicas }}
{{- if eq .Values.global.ha_enabled true }}
  minReplicas: {{ default "3" .Values.global.minReplicaCount }}
{{- else }}
  minReplicas: {{ default "1" .Values.global.minReplicaCount }}
{{- end }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: capi-controller-vsphere
  targetCPUUtilizationPercentage: 80
{{- end }}
{{- end }}