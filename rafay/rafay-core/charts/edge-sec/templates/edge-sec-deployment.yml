---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edge-sec
  name: edge-sec
spec:
{{- if eq .Values.global.ha_enabled true }}
  replicas: {{ default "3" .Values.global.minReplicaCount }}
{{- else }}
  replicas: {{ default "2" .Values.global.minReplicaCount }}
{{- end }}
  selector:
    matchLabels:
      app: edge-sec
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: edge-sec
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - edge-sec
              topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: EDGE_SEC_SERVER_PORT
          value: "50003"
        - name: EDGE_SEC_PRODUCTION
          value: "false"
        - name: EDGE_SEC_CERT_FOLDER
          value: /opt/rcloud/certs
        - name: EDGE_SEC_CONFIG_SERVICE_OU
          value: "config-broker.core.{{.Values.global.default_partner_console_domain}}"
        - name: EDGE_SEC_WORKLOAD_SERVICE_OU
          value: "workload.core.{{.Values.global.default_partner_console_domain}}"
        - name: EDGE_SEC_CRYPTO_SERVICE_OU
          value: "cryptosvc.core.{{.Values.global.default_partner_console_domain}}"
        - name: EDGE_SEC_DEBUG_SERVICE_OU
          value: "debug.core.{{.Values.global.default_partner_console_domain}}"
        - name: EDGE_SEC_EDGE_SERVICE_OU
          value: "edge.core.{{.Values.global.default_partner_console_domain}}"
        - name: EDGE_SEC_EVENT_SERVICE_OU
          value: "event.core.{{.Values.global.default_partner_console_domain}}"
        image: {{ .Values.edge_sec_image }}
        imagePullPolicy: IfNotPresent
        name: edge-sec
        {{- if or (eq .Values.global.ha_enabled true) (eq .Values.global.size "S") (eq .Values.global.size "M") (eq .Values.global.size "L") }}
        resources:
          limits:
            cpu: "{{ .Values.cpu_limits }}"
            memory: "{{ .Values.memory_limits }}"
          requests:
            cpu: "{{ .Values.cpu_requests }}"
            memory: "{{ .Values.memory_requests }}"
        {{- end }}
        ports:
        - containerPort: 50003
          name: placement
          protocol: TCP
        volumeMounts:
        - mountPath: /opt/rcloud/certs
          name: certs
      dnsPolicy: ClusterFirstWithHostNet
      hostname: edge-sec
      imagePullSecrets:
      - name: rafay-edge-registry-creds
      restartPolicy: Always
      volumes:
      - name: certs
        projected:
          sources:
          - secret:
              items:
              - key: tls.crt
                path: ca.crt
              - key: tls.key
                path: ca.key
              name: infra-salt-orchestrator-ca-tls
          - secret:
              items:
              - key: tls.crt
                path: infra_ca.crt
              - key: tls.key
                path: infra_ca.key
              name: infra-ca-tls 
---
{{- if .Values.global.ha_enabled }}
{{- if ne .Values.global.size "S" }}
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: edge-sec
  name: edge-sec
spec:
  maxReplicas: {{ default "10" .Values.maxReplicas }}
{{- if eq .Values.global.ha_enabled true }}
  minReplicas: {{ default "3" .Values.global.minReplicaCount }}
{{- else }}
  minReplicas: {{ default "1" .Values.global.minReplicaCount }}
{{- end }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: edge-sec
  targetCPUUtilizationPercentage: 80
{{- end }}
{{- end }}
