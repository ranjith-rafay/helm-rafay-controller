---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rafay-relay
  name: rafay-relay
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: rafay-relay
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "443"
        traffic.sidecar.istio.io/excludeOutboundPorts: "443"
      labels:
        app: rafay-relay
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - rafay-relay
              topologyKey: kubernetes.io/hostname
      initContainers:
      - name: set-limits
        image: {{ .Values.global.busybox_image }}
        command: ['sh', '-c', "ulimit -n 65536"]
        securityContext:
          privileged: true
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 10
      containers:
      - name: rafay-relay
        args: ["--mode=server", "--log-level=3"]
        image: "{{ .Values.rafay_relay_image }}"
        imagePullPolicy: IfNotPresent
        env:
        - name: DISABLE_AUDIT
          value: "false"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          value: rafay-core
        - name: RAFAY_RELAY_PEERSERVICE
          valueFrom:
            configMapKeyRef:
              name: rafay-relay-config
              key:  sentry.peering.host
        - name: SENTRY_ADDR
          valueFrom:
            configMapKeyRef:
              name: rafay-relay-config
              key:  sentry.addr
        - name: AUDIT_PATH
          valueFrom:
            configMapKeyRef:
              name: rafay-relay-config
              key:  audit.path
        - name: LIMIT_CONNECTIONS
          valueFrom:
            configMapKeyRef:
              key: limitConnections
              name: rafay-relay-config
        - name: MAX_CONNECTIONS
          valueFrom:
            configMapKeyRef:
              key: maxConnections
              name: rafay-relay-config
        - name: MAX_CONNECTIONS_PER_CLUSTER
          valueFrom:
            configMapKeyRef:
              key: maxConnectionsPerCluster
              name: rafay-relay-config
        - name: RELAY_PEER_LOOKUP_TIMEOUT
          valueFrom:
            configMapKeyRef:
              key: relayPeerLookupTimeout
              name: rafay-relay-config
        - name: RELAY_PEER_BREAKER_TRIP_MAX_CONSECUTIVE_FAILURES
          valueFrom:
            configMapKeyRef:
              key: relayPeerBreakerTripMaxConsecutiveFailures
              name: rafay-relay-config
        - name: RELAY_PEER_BREAKER_TRIP_MAX_HALF_OPEN_REQUESTS
          valueFrom:
            configMapKeyRef:
              key: relayPeerBreakerTripMaxHalfOpenRequests
              name: rafay-relay-config
        - name: RELAY_PEER_BREAKER_TRIP_CLEAR_INTERVAL
          valueFrom:
            configMapKeyRef:
              key: relayPeerBreakerTripClearInterval
              name: rafay-relay-config
        - name: RELAY_PEER_BREAKER_TRIP_TIMEOUT
          valueFrom:
            configMapKeyRef:
              key: relayPeerBreakerTripTimeout
              name: rafay-relay-config
        - name: RELAY_USER_PER_SNI_REQUEST_LIMIT
          valueFrom:
            configMapKeyRef:
              key: relayUserPerSniRequestLimit
              name: rafay-relay-config
        - name: RELAY_USER_PER_SNI_WINDOW_LENGTH
          valueFrom:
            configMapKeyRef:
              key: relayUserPerSniWindowLength
              name: rafay-relay-config
        volumeMounts:
        - mountPath: /opt/rafay/audit
          name: audit
        {{- if or (eq .Values.global.ha_enabled true) (eq .Values.global.size "S") (eq .Values.global.size "M") (eq .Values.global.size "L") }}
        resources:
          limits:
            cpu: "{{ .Values.cpu_limits }}"
            memory: "{{ .Values.memory_limits }}"
          requests:
            cpu: "{{ .Values.cpu_requests }}"
            memory: "{{ .Values.memory_requests }}"
        {{- end }}
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: rafay-edge-registry-creds
      volumes:
      - name: audit
        persistentVolumeClaim:
         claimName: rafay-relay-audit
---
{{- if .Values.global.ha_enabled }}
{{- if ne .Values.global.size "S" }}
kind: HorizontalPodAutoscaler
{{- if (semverCompare ">=1.23-0" .Capabilities.KubeVersion.GitVersion)}}
apiVersion: autoscaling/v2
{{- else }}
apiVersion: autoscaling/v2beta2
{{- end }}
metadata:
  name: rafay-relay
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rafay-relay
{{- if eq .Values.global.ha_enabled true }}
  minReplicas: {{ default "1" .Values.global.minReplicaCount }}
{{- else }}
  minReplicas: {{ default "1" .Values.global.minReplicaCount }}
{{- end }}
  maxReplicas: {{ default "10" .Values.maxReplicas }}
  metrics:
  - type: Pods
    pods:
      metric:
        name: active_dialin_count
      target:
        type: AverageValue
        averageValue: 650
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 600
    scaleUp:
      stabilizationWindowSeconds: 60
{{- end }}
{{- end }}
