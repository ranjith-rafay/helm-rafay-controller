---
apiVersion: v1
kind: Service
metadata:
  name: authsrv
spec:
  ports:
  - name: grpc
    port: 50011
    protocol: TCP
    targetPort: 50011
  selector:
    app: authsrv
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: authsrv
  name: authsrv
spec:
{{- if eq .Values.global.ha_enabled true }}
  replicas: {{ default "3" .Values.global.minReplicaCount }}
{{- else }}
  replicas: {{ default "1" .Values.global.minReplicaCount }}
{{- end }}
  selector:
    matchLabels:
      app: authsrv
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: authsrv
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - authsrv
              topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: AUTHSRV_SERVER_PORT
          value: "50011"
        - name: AUTHSRV_PRODUCTION
          value: "true"
        - name: AUTHSRV_PG_HOST
          value: postgres-admin
        - name: AUTHSRV_PG_PORT
          value: "5432"
        - name: AUTHSRV_PG_DATABASE
          value: admindb
        - name: AUTHSRV_PG_USERNAME
          value: "{{.Values.global.dbusers.admin_db_user }}"
        - name: AUTHSRV_CRYPTO_GRPC_HOST
          value: cryptosvc.rafay-core.svc.cluster.local
        - name: AUTHSRV_CRYPTO_GRPC_PORT
          value: "50505"
        {{- if .Values.global.is_external_database }}
        - name: AUTHSRV_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: admindb-db-secret
        {{- else }}
        - name: AUTHSRV_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: admindbuser.postgres-admin.credentials.postgresql.acid.zalan.do
        {{- end }}
        - name: AUTHSRV_REDIS_ADDR
          value: "{{ .Values.global.redis_endpoint  }}:6379"
        - name: AUTHSRV_REDIS_DB
          value: "1"
        {{- if .Values.global.ssl_mode }}
        - name: PGSSLMODE
          value: {{ default "" .Values.global.ssl_mode }}
        {{- end }} 
        image: {{ .Values.authsrv_image }}
        imagePullPolicy: IfNotPresent
        name: authsrv
        {{- if or (eq .Values.global.ha_enabled true) (eq .Values.global.size "S") (eq .Values.global.size "M") (eq .Values.global.size "L") }}
        resources:
          limits:
            cpu: "{{ .Values.cpu_limits }}"
            memory: "{{ .Values.memory_limits }}"
          requests:
            cpu: "{{ .Values.cpu_requests }}"
            memory: "{{ .Values.memory_requests }}"
        {{- end }}
        ports:
        - containerPort: 50011
          name: authsrv
          protocol: TCP
      dnsPolicy: ClusterFirstWithHostNet
      hostname: authsrv
      imagePullSecrets:
      - name: rafay-edge-registry-creds
---
{{- if .Values.global.ha_enabled }}
{{- if ne .Values.global.size "S" }}
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: authsrv
  name: authsrv
spec:
  maxReplicas: {{ default "10" .Values.maxReplicas }}
{{- if eq .Values.global.ha_enabled true }}
  minReplicas: {{ default "3" .Values.global.minReplicaCount }}
{{- else }}
  minReplicas: {{ default "1" .Values.global.minReplicaCount }}
{{- end }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: authsrv
  targetCPUUtilizationPercentage: 80
{{- end }}
{{- end }}
