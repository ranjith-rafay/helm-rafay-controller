apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{.Chart.Name}}-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{.Chart.Name}}-role
rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    verbs:
    - '*'
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{.Chart.Name}}-rb
subjects:
  - kind: ServiceAccount
    name: {{.Chart.Name}}-sa
    namespace: rafay-core
roleRef:
  kind: Role
  name: {{.Chart.Name}}-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: infra-apiserver
spec:
  selector:
    matchLabels:
      app: infra-apiserver
  {{- if eq .Values.global.ha_enabled true }}
  replicas: {{ default "3" .Values.global.minReplicaCount }}
  {{- else }}
  replicas: {{ default "1" .Values.global.minReplicaCount }}
  {{- end }}
  template:
    metadata:
      labels:
        app: infra-apiserver
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - infra-apiserver
              topologyKey: kubernetes.io/hostname
      serviceAccount: {{.Chart.Name}}-sa
      terminationGracePeriodSeconds: 10
      containers:
        - name: infra-apiserver
          image: {{.Values.infra_apiserver_image }}
          {{- if or (eq .Values.global.ha_enabled true) (eq .Values.global.size "S") (eq .Values.global.size "M") (eq .Values.global.size "L") }}
          resources:
            limits:
              cpu: "{{ .Values.cpu_limits }}"
              memory: "{{ .Values.memory_limits }}"
            requests:
              cpu: "{{ .Values.cpu_requests }}"
              memory: "{{ .Values.memory_requests }}"
          {{- end }}
          env:
            - name: GATEWAY_OVA_DOWNLOAD_URL
              value: {{ .Values.global.gateway_ova_download_url }}
            - name: KAFKA_BROKERS
              value: kafka-core:9092
            - name: DB_ADDR
              value: postgres-admin:5432
            - name: DB_NAME
              value: infradb
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: infra.db.user
                  name: {{.Chart.Name}}-secrets
            {{- if .Values.global.is_external_database }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: infradb-db-secret
            {{- else }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: infradbuser.postgres-admin.credentials.postgresql.acid.zalan.do
            {{- end }}
            {{- if .Values.global.is_external_database }}
            - name: EDGE_PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: edgedb-db-secret
            {{- else }}
            - name: EDGE_PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: edgedbuser.postgres-admin.credentials.postgresql.acid.zalan.do
            {{- end }}            
            - name: REDIS_ADDR
              value: "{{ .Values.global.redis_endpoint  }}:6379"
            - name: AUTHSRV_ADDR
              value: authsrv:50011
            - name: KEYGEN_ADDR
              value: keygensvc:50505
            - name: CRYPTO_ADDR
              value: cryptosvc:50505
            - name: EDGE_SEC_ADDR
              value: edge-sec:50003
            - name: EDGE_FACTORY_ADDR
              value: edge-factory:50004
            - name: CERT_PATH
              value: /opt/certs
            - name: INFRA_CA_PATH
              value: /opt/infra-certs/infra_ca.crt
            - name: KMIWRAP_KEY_PATH
              value: /opt/infra-certs/kmiwrap.key
            - name: SCHEDULER_ADDR
              value: scheduler.rafay-core.svc.cluster.local:5000
            - name: CONFIG_ADDR
              value: rafay-config:7000
            - name: EDGE_SUFFIX
              value: {{ .Values.global.edge_suffix }}
            - name: DEFAULT_PARTNER_DOMAIN
              value: console.{{ .Values.global.default_partner_console_domain }}
            - name: EDGE_CNAME_SUFFIX
              value: edge.core.{{ .Values.global.default_partner_console_domain }}
            - name: SALT_MASTER_ADV_HOST
              value: salt.core.{{ .Values.global.default_partner_console_domain }}
            - name: DEFAULT_PARTNER_HOST
              value: console.{{ .Values.global.default_partner_console_domain }}
            - name: REGISTRY_DOMAIN
              value: rcr.{{ .Values.global.default_partner_console_domain }}
            - name: INFLUXDB_FQDN
              value: ops-console.{{ .Values.global.default_partner_console_domain }}
            - name: EVENT_FRAMEWORK_FQDN
              value: event.core.{{ .Values.global.default_partner_console_domain }}
            - name: CORE_AGGREGATOR_FQDN
              value: fluentd-aggr.{{ .Values.global.default_partner_console_domain }}
            - name: CORE_REGISTRY_FQDN
              value: ops-console.{{ .Values.global.default_partner_console_domain }}
            - name: SCHEDULER_CONTROLLER_ADDR
              value: control.core.{{ .Values.global.default_partner_console_domain }}
            - name: SCHEDULER_API_ADDR
              value: api.{{ .Values.global.default_partner_console_domain }}
            - name: RAFAY_CONJURER_URL
              value: https://console.{{.Values.global.default_partner_console_domain}}/{{ .Values.global.rafay_conjurer_url }}
            - name: DEPLOYMENT_ENV
              value: {{ .Values.global.deployment_env }}
            - name: PROD
              value: "true"
            - name: INFLUX_CONN_URL
              value: "http://promscale-connector:9201/write"
            - name: TEAMS
              value: Operations-Prod
            - name: RAFAY_CLI_BUCKET_URL
              value: {{ .Values.rafay_cli_bucket_url }}
            - name: BOOTSTRAP_REPO_URL
              value: "https://ops-console.{{ .Values.global.default_partner_console_domain }}/repository/eks-bootstrap/v1/"
            - name: EDGE_ZONE
              value: edges.run.{{ .Values.global.default_partner_console_domain }}
            - name: RELAY_EXTERNAL_URL
              value: https://prometheusrelay.ops.{{ .Values.global.default_partner_console_domain }}
            - name: CATALOG_LABELS_ENABLED
              value: rcloud-infra,kube-system,logging,monitoring
            - name: SALT_MASTER_HOST
              value: salt-master
            - name: ENV
              value: {{ .Values.global.deployment_env }}
            - name: ALERT_MANAGER_YAML
              valueFrom:
                secretKeyRef:
                  key: alert-manager-yaml
                  name: edgesrv-secrets
            - name: INFLUX_PWD
              valueFrom:
                secretKeyRef:
                  key: influx-pwd
                  name: {{.Chart.Name}}-secrets
          volumeMounts:
            - mountPath: /opt/certs
              name: certs
            - mountPath: /opt/infra-certs
              name: infra-certs
      volumes:
        - name: certs
          secret:
            items:
              # - key: partner-edge.crt
              #   path: partner-edge.crt
              # - key: partner-edge.key
              #   path: partner-edge.key
              # - key: partner-edge-ca.crt
              #   path: partner-edge-ca.crt
              # - key: partner-l4-err-cert.pem
              #   path: partner-l4-err-cert.pem
            secretName: {{.Chart.Name}}-secrets
        - name: infra-certs
          projected:
            sources:
            - secret:
                items:
                  - key: tls.crt
                    path: infra_ca.crt
                name: infra-ca-tls
            - secret:
                items:
                - key: tls.key
                  path: kmiwrap.key
                name: selfsigned-cert-tls-kmi-wrap
---
{{- if .Values.global.ha_enabled }}
{{- if ne .Values.global.size "S" }}
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: infra-apiserver
  name: infra-apiserver
spec:
  maxReplicas: {{ default "10" .Values.maxReplicas }}
{{- if eq .Values.global.ha_enabled true }}
  minReplicas: {{ default "3" .Values.global.minReplicaCount }}
{{- else }}
  minReplicas: {{ default "1" .Values.global.minReplicaCount }}
{{- end }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: infra-apiserver
  targetCPUUtilizationPercentage: 80
{{- end }}
{{- end }}