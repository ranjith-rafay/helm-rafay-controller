apiVersion: v1
kind: ServiceAccount
metadata:
  {{- if .Values.global.engine_api_irsa_role_arn }}
  annotations:
    eks.amazonaws.com/role-arn: "{{ .Values.global.engine_api_irsa_role_arn }}"  
  {{- end }}  
  name: engine-api-sa
  namespace: rafay-core
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: engine-api-role
  namespace: rafay-core
rules:
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: engine-api-rolebinding
  namespace: rafay-core
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: engine-api-role
subjects:
  - kind: ServiceAccount
    name: engine-api-sa
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: engine-api
  name: engine-api
  namespace: rafay-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: engine-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        traffic.sidecar.istio.io/excludeOutboundIPRanges: "10.100.0.0/16"
      labels:
        app: engine-api
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - engine-api
              topologyKey: kubernetes.io/hostname           
      serviceAccount: engine-api-sa
      containers:
      - name: engine-api
        image: {{ .Values.global.envmgr_image }}
        {{- if or (eq .Values.global.ha_enabled true) (eq .Values.global.size "S") (eq .Values.global.size "M") (eq .Values.global.size "L") }}
        resources:
          limits:
            cpu: "{{ .Values.cpu_limits }}"
            memory: "{{ .Values.memory_limits }}"
          requests:
            cpu: "{{ .Values.cpu_requests }}"
            memory: "{{ .Values.memory_requests }}"
        {{- end }}
        env:
        - name: ENGINE_API_WORKFLOW_RUN_OUTBOX_POLL_TICK_RATE
          valueFrom:
            configMapKeyRef:
              key: engine.engine_api_workflow_run_outbox_poll_tick_rate
              name: engine-api-cm
        - name: ENGINE_API_TRIGGER_EVENT_POLL_TICK_RATE
          valueFrom:
            configMapKeyRef:
              key: engine.engine_api_trigger_event_poll_tick_rate
              name: engine-api-cm
        - name: ENGINE_API_WORKFLOW_RUN_OVERFLOW_COPY_POLL_TICK_RATE
          valueFrom:
            configMapKeyRef:
              key: engine.engine_api_workflow_run_overflow_copy_poll_tick_rate
              name: engine-api-cm
        - name: ENGINE_ENABLE_API
          valueFrom:
            configMapKeyRef:
              key: engine.enable_api
              name: engine-api-cm
        - name: ENGINE_API_REDIS_ADDR
          valueFrom:
            configMapKeyRef:
              key: engine.engine_api.redis_addr
              name: engine-api-cm
        - name: HELPERS_ADDR
          valueFrom:
            configMapKeyRef:
              key: helpers.addr
              name: engine-api-cm
        - name: ENGINE_API_DB_HOST
          valueFrom:
            configMapKeyRef:
              key: engine.engine_api.db_host
              name: engine-api-cm
        - name: ENGINE_API_DB_NAME
          valueFrom:
            configMapKeyRef:
              key: engine.engine_api.db_name
              name: engine-api-cm
        - name: ENGINE_API_DB_USER
          valueFrom:
            configMapKeyRef:
              key: engine.engine_api.db_user
              name: engine-api-cm
        {{- if .Values.global.is_external_database }}  
        - name: ENGINE_API_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pipelinedb-db-secret
        {{- else }} 
        - name: ENGINE_API_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pipelinedbuser.postgres-admin.credentials.postgresql.acid.zalan.do
        {{- end}}      
        - name: ENGINE_API_ENABLE_E2E
          valueFrom:
            configMapKeyRef:
              key: engine.engine_api.enable_e2e
              name: engine-api-cm
        - name: LEADER_ELECTION_LEADER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LEADER_ELECTION_LEASE_LOCK_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- if eq .Values.global.engine_api_irsa_role_arn "" }}      
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws.access.key.id
              name: engine-api-secret
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws.secret.access.key
              name: engine-api-secret
        {{- end }}      
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              key: aws.region
              name: engine-api-cm
        - name: ENGINE_API_BLOB_S3_BUCKET
          valueFrom:
            configMapKeyRef:
              key: engine.enable_api.blob_s3_bucket
              name: engine-api-cm
        - name: ENGINE_API_BLOB_PROVIDER
          valueFrom:
            configMapKeyRef:
              key: engine.engine_api.blob_provider
              name: engine-api-cm
        - name: REGISTRY_FQDN
          valueFrom:
            configMapKeyRef:
              key: registry.fqdn
              name: engine-api-cm
        - name: GIT_DRIVER_IMAGE 
          valueFrom:
            configMapKeyRef:
              key: artifact.driver.image
              name: engine-api-cm
        - name: ARTIFACT_DRIVER_IMAGE 
          valueFrom:
            configMapKeyRef:
              key: artifact.driver.image
              name: engine-api-cm
        - name: TF_DRIVER_IMAGE
          valueFrom:
            configMapKeyRef:
              key: tf.driver.image
              name: engine-api-cm
        livenessProbe:
          httpGet:
            path: /livez
            port: 15010
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
          initialDelaySeconds: 5
        readinessProbe:
          httpGet:
            path: /readyz
            port: 15010
          periodSeconds: 10
          successThreshold: 3
          failureThreshold: 1
          timeoutSeconds: 5
          initialDelaySeconds: 5  
        
