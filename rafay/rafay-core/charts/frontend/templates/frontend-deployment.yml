apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend
spec:
{{- if eq .Values.global.ha_enabled true }}
  replicas: {{ default "3" .Values.global.minReplicaCount }}
{{- else }}
  replicas: {{ default "1" .Values.global.minReplicaCount }}
{{- end }}
  selector:
    matchLabels:
      app: frontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: frontend
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - frontend
              topologyKey: kubernetes.io/hostname
      containers:
      {{- if .Values.amp_enabled }}
      - image: {{.Values.global.aws_sigv4_proxy_image}}
        name: aws-sigv4-proxy
        args:
          - --name
          - aps
          - --region
          - "{{ .Values.global.monitoring.integrations.amp.region }}"
          - --host
          - aps-workspaces.{{ .Values.global.monitoring.integrations.amp.region }}.amazonaws.com
          - --port
          - :8005
        ports:
        - containerPort: 8005
          protocol: TCP
        {{- if or (eq .Values.global.ha_enabled true) (eq .Values.global.size "S") (eq .Values.global.size "M") (eq .Values.global.size "L") }}
        resources:
          limits:
            cpu: "{{ .Values.cpu_limits }}"
            memory: "{{ .Values.memory_limits }}"
          requests:
            cpu: "{{ .Values.cpu_requests }}"
            memory: "{{ .Values.memory_requests }}"
      {{- end }} 
      {{- end }}   
      - image: {{ .Values.frontend_image }}
        imagePullPolicy: IfNotPresent
        name: frontend
        env:
        - name: IS_SELF_HOSTED
          value: "true"
        - name: LOGGING
          value: "true"
        - name: CONTROLLER_VER
          value: "2.5-03"
        - name: ELASTIC_SEARCH_FQDN
          value: elasticsearch:9200
        - name: ENV
          value: {{ .Values.global.deployment_env }}
        - name: AUTH_SVC_HOST
          value: authsrv
        - name: AUTH_SVC_PORT
          value: "50011"
        - name: PROMETHEUS_FQDN
          value: prometheus-k8s.rafay-core:9090
        - name: PROMETHEUS_NAMESPACE
          value: rafay-core
        - name: RAFAYCONFIG_NAMESPACE
          value: rafay-core
        - name: RAFAYPIPELINE_NAMESPACE
          value: rafay-core
        - name: PROMETHEUS_URL_COSTMGMT
          value: http://prometheus-k8s-cost-metrics.rafay-core:9090
        - name: PROMETHEUS_URL_COSTMGMT_LT
          value: http://prometheus-k8s-cost-metrics-lt.rafay-core:9090          
        - name: ADMIN_API_NAMESPACE
          value: rafay-core
       {{- if .Values.amp_enabled }}
        - name: AMP_ENABLED
          value: "true"
        - name: PROMETHEUS_URL
          value: {{ printf "http://localhost:8005/workspaces/%s" .Values.global.monitoring.integrations.amp.workspaceId | quote }}
        - name: PROMETHEUS_URL_RT
          value: {{ printf "http://localhost:8005/workspaces/%s" .Values.global.monitoring.integrations.amp.workspaceId | quote }}
       {{- else }}
        - name: PROMETHEUS_URL
          value: http://prometheus-k8s.rafay-core:9090
        - name: PROMETHEUS_URL_RT
          value: http://prometheus-k8s.rafay-core:9090
        {{- end }}
        - name: DEBUG_API_NAMESPACE
          value: rafay-core
        - name: LOGO_PNG
          value: "true"
        {{- if or (eq .Values.global.ha_enabled true) (eq .Values.global.size "S") (eq .Values.global.size "M") (eq .Values.global.size "L") }}
        resources:
          limits:
            cpu: "{{ .Values.cpu_limits }}"
            memory: "{{ .Values.memory_limits }}"
          requests:
            cpu: "{{ .Values.cpu_requests }}"
            memory: "{{ .Values.memory_requests }}"
        {{- end }}
        ports:
        - containerPort: 8081
          name: http
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /live
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /ready
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh","-c","sleep 5"]
        #volumeMounts:
        #- name: logo
          #mountPath: /config
      dnsPolicy: ClusterFirst 
      serviceAccount: frontend-sa
      imagePullSecrets:
      - name: rafay-edge-registry-creds
      restartPolicy: Always
      volumes:
      - name: logo
        configMap:
          name: frontend-logo
          items:
          - key: logo_png_base64.txt
            path:  logo_png_base64.txt
---
{{- if .Values.global.ha_enabled }}
{{- if ne .Values.global.size "S" }}
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: frontend
  name: frontend
spec:
  maxReplicas: {{ default "10" .Values.maxReplicas }}
{{- if eq .Values.global.ha_enabled true }}
  minReplicas: {{ default "3" .Values.global.minReplicaCount }}
{{- else }}
  minReplicas: {{ default "1" .Values.global.minReplicaCount }}
{{- end }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  targetCPUUtilizationPercentage: 80
{{- end }}
{{- end }}
